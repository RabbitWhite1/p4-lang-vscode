$schema: "./tmLanguage.json"
name: "p4"

variables:
  identifier: '[_\w][\w\d_]*'
patterns:
  # comments
  - include: "#lineComments"
  - include: "#blockComments"
  # keywords
  - include: "#keywords"
  - include: "#builtin_types"
  - include: "#buildin_variables"
  # numerics
  - include: "#dec_numerics"
  - include: "#bin_numerics"
  - include: "#numerics"
  - include: "#bits"
  # strings
  - include: "#strings"
  # imports
  - include: "#imports"
  # typedefs
  - include: "#typedefs"
  # structures
  - include: "#headers"
  - include: "#structs"
  - include: "#applys"
  - include: "#parsers"
  - include: "#controls"
  - include: "#states"
  - include: "#actions"
  - include: "#tables"
  # member
  - include: "#member_visits"
  # function
  - include: "#function_calls"

repository:
  # comments
  lineComments:
    name: comment.line.double-slash.p4
    begin: "//"
    end: (?:\n)
  blockComments:
    name: comment.block.p4
    begin: "/*"
    end: "*/"
    match: /\*.*?\*/
  # keywords and builtin
  keywords:
    patterns:
      - name: keyword.control.p4
        match: \b(if|return|error|default|transition)\b
  builtin_types:
    name: storage.type.p4
    match: (inout|in|out|packet_in|packet_out|bool)
  buildin_variables:
    name: support.variable.p4
    match: \b(true|false)\b
  # numerics
  dec_numerics:
    match: \W+(0x\d+)
    captures: 
      "1": { name: constant.numeric.p4 }
  bin_numerics:
    match: \W+(\d+w\d+)
    captures: 
      "1": { name: constant.numeric.p4 }
  numerics:
    match: \W+(\d+)
    captures: 
      "1": { name: constant.numeric.p4 }
  bits:
    match: "(bit)<([0-9]+)>"
    captures:
      "1": { name: storage.type.p4 }
      "2": { name: constant.numeric.p4 }
  # strings
  strings:
    name: string.quoted.double.p4
    begin: "\""
    end: "\""
    patterns:
      - name: constant.character.escape.p4
        match: \\.
  imports:
    match: (#include)\s*(<)(.*)(>)
    captures:
      "1": { name: keyword.control.p4 }
      "2": { name: string.quoted.double.p4 }
      "3": { name: string.quoted.double.p4 }
      "4": { name: string.quoted.double.p4 }
  typedefs:
    match: (typedef)\s+(.*)\s+(.*)\s*;
    captures: 
      "1": { name: keyword.control.p4 }
      "2":
        patterns:
          - include: "#bits"
      "3": { name: entity.name.type.other.p4 }

  # those with format "<type> <name>"
  headers:
    name: meta.header.p4
    match: \s*(header)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.header.p4 }
      "2": { name: entity.name.type.header.p4 }
  structs:
    name: meta.struct.p4
    match: \s*(struct)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.struct.p4 }
      "2": { name: entity.name.type.structs.p4 }
  controls:
    name: meta.control.p4
    match: \s*(control)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.control.p4 }
      "2": { name: entity.name.type.control.p4 }
  parsers:
    name: meta.parser.p4
    match: \s*(parser)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.parser.p4 }
      "2": { name: entity.name.type.parser.p4 }
  states:
    name: meta.state.p4
    match: \s*(state)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.state.p4 }
      "2": { name: entity.name.type.states.p4 }
  actions:
    name: meta.state.p4
    match: \s*(action)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.function.p4 }
      "2": { name: entity.name.function.action.p4 }
  tables:
    name: meta.table.p4
    match: \s*(table)\s+([_\w][\w\d_]*)\s*
    captures:
      "1": { name: storage.type.table.p4 }
      "2": { name: variable.other.table.p4 }

  applys:
    match: \s*(apply)\s*\{
    captures:
      "1": { name: keyword.control.p4 }
  member_visiteds:
    match: \s*\.\s*([_\w][\w\d_]*)
    captures:
      "1": { name: variable.name.p4 }
  function_calls:
    match: (?:\s*|\.)([_\w][\w\d_]*)\s*\(
    captures:
      "1": { name: entity.name.function.p4 }
  member_visits:
    match: \s*([_\w][\w\d_]*)(\.[\w.]+)\s*
    captures:
      "1": { name: variable.name.p4 }
      "2":
        patterns:
          - include: "#member_visits"
          - include: "#function_calls"
          - include: "#member_visiteds"
      
scopeName: source.p4
